diff --git a/extensions/cpsection/datetime/model.py b/extensions/cpsection/datetime/model.py
index 76064e4..9a27ea3 100644
--- a/extensions/cpsection/datetime/model.py
+++ b/extensions/cpsection/datetime/model.py
@@ -27,65 +27,67 @@ import gconf
 _zone_tab = '/usr/share/zoneinfo/zone.tab'
 
 def _initialize():
-    '''Initialize the docstring of the set function'''
-    if set_timezone.__doc__ is None:
-        # when running under 'python -OO', all __doc__ fields are None,
-        # so += would fail -- and this function would be unnecessary anyway.
-        return
-    timezones = read_all_timezones()    
-    for timezone in timezones:
-        set_timezone.__doc__ += timezone + '\n'                        
-                
+	'''Initialize the docstring of the set function'''
+	if set_timezone.__doc__ is None:
+	    # when running under 'python -OO', all __doc__ fields are None,
+	    # so += would fail -- and this function would be unnecessary anyway.
+	    return
+	timezones = read_all_timezones()
+	for timezone in timezones:
+	    set_timezone.__doc__ += timezone + '\n'
+
 def read_all_timezones(fn=_zone_tab):
-    fd = open (fn, 'r')
-    lines = fd.readlines()
-    fd.close()
-    timezones = []
-    for line in lines:
-        if line.startswith('#'):
-            continue
-        line = line.split()
-        if len(line) > 1:
-            timezones.append(line[2])
-    timezones.sort()
-   
-    for offset in xrange(-12, 13):
-        if offset < 0:
-            tz = 'GMT%d' % offset
-        elif offset > 0:
-            tz = 'GMT+%d' % offset
-        else:
-            tz = 'GMT'
-        timezones.append(tz)    
-    for offset in xrange(-12, 13):
-        if offset < 0:
-            tz = 'UTC%d' % offset
-        elif offset > 0:
-            tz = 'UTC+%d' % offset
-        else:
-            tz = 'UTC'
-        timezones.append(tz)    
-    return timezones
+	timezones = []
+	try:
+	    fd = open (fn, 'r')
+	    lines = fd.readlines()
+	    fd.close()
+	    for line in lines:
+	        if line.startswith('#'):
+	            continue
+	        line = line.split()
+	        if len(line) > 1:
+	            timezones.append(line[2])
+	    timezones.sort()
+	except:
+	    pass
+	for offset in xrange(-12, 13):
+	    if offset < 0:
+	        tz = 'GMT%d' % offset
+	    elif offset > 0:
+	        tz = 'GMT+%d' % offset
+	    else:
+	        tz = 'GMT'
+	    timezones.append(tz)
+	for offset in xrange(-12, 13):
+	    if offset < 0:
+	        tz = 'UTC%d' % offset
+	    elif offset > 0:
+	        tz = 'UTC+%d' % offset
+	    else:
+	        tz = 'UTC'
+	    timezones.append(tz)
+	return timezones
 
 def get_timezone():
-    client = gconf.client_get_default()
-    return client.get_string('/desktop/sugar/date/timezone')
+	client = gconf.client_get_default()
+	return client.get_string('/desktop/sugar/date/timezone')
 
 def print_timezone():
-    print get_timezone()
+	print get_timezone()
 
 def set_timezone(timezone):
-    """Set the system timezone
-    timezone : e.g. 'America/Los_Angeles'
-    """
-    timezones = read_all_timezones()
-    if timezone in timezones:
-        os.environ['TZ'] = timezone
-        client = gconf.client_get_default()
-        client.set_string('/desktop/sugar/date/timezone', timezone)
-    else:
-        raise ValueError(_("Error timezone does not exist."))
-    return 1
+	"""Set the system timezone
+	timezone : e.g. 'America/Los_Angeles'
+	"""
+	timezones = read_all_timezones()
+	if timezone in timezones:
+	    os.environ['TZ'] = timezone
+	    client = gconf.client_get_default()
+	    client.set_string('/desktop/sugar/date/timezone', timezone)
+	else:
+	    raise ValueError(_("Error timezone does not exist."))
+	return 1
 
 # inilialize the docstrings for the timezone 
 _initialize()

--- firefox-3.0.2.orig/js/src/jscpucfg.c	2008-02-20 06:11:01.000000000 +0100
+++ firefox-3.0.2/js/src/jscpucfg.c	2008-09-28 16:17:23.000000000 +0200
@@ -44,7 +44,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 
-#ifdef CROSS_COMPILE
+#if 1
 #include <prtypes.h>
 #define INT64 PRInt64
 #else
@@ -182,37 +182,61 @@
 
     printf("/* AUTOMATICALLY GENERATED - DO NOT EDIT */\n\n");
 
-#ifdef CROSS_COMPILE
-#if defined(IS_LITTLE_ENDIAN)
-    printf("#define IS_LITTLE_ENDIAN 1\n");
-    printf("#undef  IS_BIG_ENDIAN\n\n");
-#elif defined(IS_BIG_ENDIAN)
-    printf("#undef  IS_LITTLE_ENDIAN\n");
-    printf("#define IS_BIG_ENDIAN 1\n\n");
-#else
-#error "Endianess not defined."
-#endif
+#if 1
+    printf("#include <prtypes.h>\n");
+    printf("\n");
+
+    printf("#define JS_BYTES_PER_BYTE   PR_BYTES_PER_BYTE\n");
+    printf("#define JS_BYTES_PER_SHORT  PR_BYTES_PER_SHORT\n");
+    printf("#define JS_BYTES_PER_INT    PR_BYTES_PER_INT\n");
+    printf("#define JS_BYTES_PER_INT64  PR_BYTES_PER_INT64\n");
+    printf("#define JS_BYTES_PER_LONG   PR_BYTES_PER_LONG\n");
+    printf("#define JS_BYTES_PER_FLOAT  PR_BYTES_PER_FLOAT\n");
+    printf("#define JS_BYTES_PER_DOUBLE PR_BYTES_PER_DOUBLE\n");
+    printf("#define JS_BYTES_PER_WORD   PR_BYTES_PER_WORD\n");
+    printf("#define JS_BYTES_PER_DWORD  PR_BYTES_PER_DWORD\n");
+    printf("\n");
+
+    printf("#define JS_BITS_PER_BYTE    PR_BITS_PER_BYTE\n");
+    printf("#define JS_BITS_PER_SHORT   PR_BITS_PER_SHORT\n");
+    printf("#define JS_BITS_PER_INT     PR_BITS_PER_INT\n");
+    printf("#define JS_BITS_PER_INT64   PR_BITS_PER_INT64\n");
+    printf("#define JS_BITS_PER_LONG    PR_BITS_PER_LONG\n");
+    printf("#define JS_BITS_PER_FLOAT   PR_BITS_PER_FLOAT\n");
+    printf("#define JS_BITS_PER_DOUBLE  PR_BITS_PER_DOUBLE\n");
+    printf("#define JS_BITS_PER_WORD    PR_BITS_PER_WORD\n");
+    printf("\n");
+
+    printf("#define JS_BITS_PER_BYTE_LOG2   PR_BITS_PER_BYTE_LOG2\n");
+    printf("#define JS_BITS_PER_SHORT_LOG2  PR_BITS_PER_SHORT_LOG2\n");
+    printf("#define JS_BITS_PER_INT_LOG2    PR_BITS_PER_INT_LOG2\n");
+    printf("#define JS_BITS_PER_INT64_LOG2  PR_BITS_PER_INT64_LOG2\n");
+    printf("#define JS_BITS_PER_LONG_LOG2   PR_BITS_PER_LONG_LOG2\n");
+    printf("#define JS_BITS_PER_FLOAT_LOG2  PR_BITS_PER_FLOAT_LOG2\n");
+    printf("#define JS_BITS_PER_DOUBLE_LOG2 PR_BITS_PER_DOUBLE_LOG2\n");
+    printf("#define JS_BITS_PER_WORD_LOG2   PR_BITS_PER_WORD_LOG2\n");
+    printf("\n");
+
+    printf("#define JS_ALIGN_OF_SHORT   PR_ALIGN_OF_SHORT\n");
+    printf("#define JS_ALIGN_OF_INT     PR_ALIGN_OF_INT\n");
+    printf("#define JS_ALIGN_OF_LONG    PR_ALIGN_OF_LONG\n");
+    printf("#define JS_ALIGN_OF_INT64   PR_ALIGN_OF_INT64\n");
+    printf("#define JS_ALIGN_OF_FLOAT   PR_ALIGN_OF_FLOAT\n");
+    printf("#define JS_ALIGN_OF_DOUBLE  PR_ALIGN_OF_DOUBLE\n");
+    printf("#define JS_ALIGN_OF_POINTER PR_ALIGN_OF_POINTER\n");
+    printf("#define JS_ALIGN_OF_WORD    PR_ALIGN_OF_WORD\n");
+    printf("\n");
+
+    printf("#define JS_BYTES_PER_WORD_LOG2   PR_BYTES_PER_WORD_LOG2\n");
+    printf("#define JS_BYTES_PER_DWORD_LOG2  PR_BYTES_PER_DWORD_LOG2\n");
+    printf("#define JS_WORDS_PER_DWORD_LOG2  PR_WORDS_PER_DWORD_LOG2\n");
+    printf("\n");
+
+    printf("#define JS_STACK_GROWTH_DIRECTION (-1)\n");
+    printf("\n");
 
-    sizeof_char         = PR_BYTES_PER_BYTE;
-    sizeof_short        = PR_BYTES_PER_SHORT;
-    sizeof_int          = PR_BYTES_PER_INT;
-    sizeof_int64        = PR_BYTES_PER_INT64;
-    sizeof_long         = PR_BYTES_PER_LONG;
-    sizeof_float        = PR_BYTES_PER_FLOAT;
-    sizeof_double       = PR_BYTES_PER_DOUBLE;
-    sizeof_word         = PR_BYTES_PER_WORD;
-    sizeof_dword        = PR_BYTES_PER_DWORD;
-
-    bits_per_int64_log2 = PR_BITS_PER_INT64_LOG2;
-
-    align_of_short      = PR_ALIGN_OF_SHORT;
-    align_of_int        = PR_ALIGN_OF_INT;
-    align_of_long       = PR_ALIGN_OF_LONG;
-    align_of_int64      = PR_ALIGN_OF_INT64;
-    align_of_float      = PR_ALIGN_OF_FLOAT;
-    align_of_double     = PR_ALIGN_OF_DOUBLE;
-    align_of_pointer    = PR_ALIGN_OF_POINTER;
-    align_of_word       = PR_ALIGN_OF_WORD;
+    printf("#define JS_HAVE_LONG_LONG\n");
+    printf("\n");
 
 #else /* !CROSS_COMPILE */
 
@@ -322,7 +346,6 @@
     align_of_pointer    = ALIGN_OF(pointer);
     align_of_word       = ALIGN_OF(prword);
 
-#endif /* CROSS_COMPILE */
 
     printf("#define JS_BYTES_PER_BYTE   %dL\n", sizeof_char);
     printf("#define JS_BYTES_PER_SHORT  %dL\n", sizeof_short);
@@ -376,6 +399,8 @@
     printf("#define JS_HAVE_LONG_LONG\n");
     printf("\n");
 
+#endif /* CROSS_COMPILE */
+
     printf("#endif /* js_cpucfg___ */\n");
 
     return EXIT_SUCCESS;
